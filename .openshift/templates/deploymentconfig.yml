---
kind: Template
apiVersion: v1
metadata:
  name: oauth-sidecar-template
  annotations:
    openshift.io/display-name: Application With OpenShift OAuth Sidecar template
    description: Creates an application with traffic routed through an OpenShift OAuth Proxy sidecar
    iconClass: icon-openshift
    tags: instant-app
  labels:
    app: oauth-sidecar-template
objects:
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: vue-oauth
    annotations:
      serviceaccounts.openshift.io/oauth-redirectreference.primary: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"${NAME}"}}'
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: "${NAME}"
    labels:
      app: "${NAME}"
  spec:
    replicas: 1
    selector:
      name: "${NAME}"
    strategy:
      type: Rolling
    template:
      metadata:
        labels:
          name: "${NAME}"
      spec:
        serviceAccountName: vue-oauth
        containers:
        - name: "${NAME}"
          image: "${NAME}"
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          ports:
          - containerPort: ${{APP_PORT}}
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext:
          capabilities: {}
          privileged: false
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - "${NAME}"
        from:
          kind: ImageStreamTag
          name: "${NAME}:latest"
      type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      name: "${NAME}"
      app: "${NAME}"
    name: "${NAME}"
  spec:
    ports:
    - port: ${{APP_PORT}}
      protocol: TCP
      targetPort: ${{APP_PORT}}
    selector:
      name: "${NAME}"
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      name: "${NAME}"
      app: "${NAME}"
    name: "${NAME}"
  spec:
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    port:
      targetPort: ${{APP_PORT}}
    to:
      kind: Service
      name: "${NAME}"
      weight: 100
    wildcardPolicy: None
parameters:
- name: NAME
  displayName: Name
  description: The name assigned to all objects and the resulting imagestream.
  required: true
  value: oauth-test
- description: The port on which the proxied application listens on
  displayName: App Port
  name: APP_PORT
  value: "8080"
  required: true
labels:
  template: oauth-sidecar-template
